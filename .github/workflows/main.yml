name: CI
on:
  push:
    branches: [master]
    tags:
      - 'v*'
      - '[0-9]+.[0-9]+.[0-9]+' # Also match tags without 'v' prefix
  pull_request:
    branches: [master]
  workflow_dispatch: 
    inputs:
      create_release:
        description: 'Create a new release'
        type: boolean
        default: false
      version:
        description: 'Version number (required if creating release)'
        type: string
        required: false
      tag_name:
        description: 'Tag name for release (required if creating release)'
        type: string
        required: false
    
jobs:
  Build:
    runs-on: macos-14 # macOS Sonoma
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
      - name: Install xcpretty
        run: gem install xcpretty
      - name: SwiftFormat
        run: swift run -c release swiftformat ../ --lint
        working-directory: ./BuildTools
      - name: Switch Xcode version
        run: sudo xcode-select -s /Applications/Xcode_15.4.app
      - name: Build
        run: |
          xcodebuild -scheme eul -project ./eul.xcodeproj \
          -configuration Release \
          -derivedDataPath ./DerivedData \
          -sdk macosx build \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED="NO" \
          CODE_SIGN_ENTITLEMENTS="" \
          CODE_SIGNING_ALLOWED="NO" | xcpretty && exit ${PIPESTATUS[0]}
      - name: Find and zip app
        run: |
          APP_PATH=$(find ./DerivedData -name "*.app" -type d | head -n 1)
          mkdir -p ./artifacts
          ditto -c -k --keepParent "$APP_PATH" ./artifacts/eul.app.zip
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: eul-app
          path: ./artifacts/eul.app.zip
          retention-days: 7
      
      - name: Create Release from Tag
        id: create_release_tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/eul.app.zip
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create Release from Manual Trigger
        id: create_release_manual
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true' && github.event.inputs.tag_name != ''
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.event.inputs.version }}
          tag_name: ${{ github.event.inputs.tag_name }}
          draft: false
          prerelease: false
          files: ./artifacts/eul.app.zip
          token: ${{ secrets.GITHUB_TOKEN }}
